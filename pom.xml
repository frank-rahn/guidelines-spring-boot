<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2019-2020 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.8.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>de.rahn.guidelines.springboot</groupId>
  <artifactId>guideline-springboot-parent</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Parent</name>
  <description>Guidelines for Spring Boot - Parent</description>
  <packaging>pom</packaging>

  <properties>
    <!-- Standard -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Java Version -->
    <java.version>11</java.version>
    <!-- Docker Tagging: adoptopenjdk/openjdk11:jdk-11.0.4_11-alpine -->
    <docker-basis-image.version>
      adoptopenjdk/openjdk11@sha256:ab91daa73b009e181a67c6bf78f0f6e2fd4535a4613dadf3cc62ef19588c40b4
    </docker-basis-image.version>

    <!-- Other Spring Version -->
    <spring-cloud-dependencies.version>Hoxton.SR5</spring-cloud-dependencies.version>

    <!-- Other Libraries (Not in spring-boot-dependencies) -->
    <springdoc-openapi.version>1.4.1</springdoc-openapi.version>
    <jquery.version>3.5.1</jquery.version>
    <popper.js.version>2.0.2</popper.js.version>
    <bootstrap.version>4.5.0</bootstrap.version>

    <!-- Plugins Version -->
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
    <jib-maven-plugin.version>2.4.0</jib-maven-plugin.version>
    <sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
  </properties>

  <modules>
    <module>guideline-springboot-app-core</module>
    <module>guideline-springboot-app-jdbc</module>
    <module>guideline-springboot-app-jpa</module>
    <module>guideline-springboot-batch</module>
    <module>guideline-springboot-rest</module>
    <module>guideline-springboot-web</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud-dependencies.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Libraries -->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-ui</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-data-rest</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-security</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <!-- JavaScript -->
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>jquery</artifactId>
        <version>${jquery.version}</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>popper.js</artifactId>
        <version>${popper.js.version}</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>bootstrap</artifactId>
        <version>${bootstrap.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${jib-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>install</phase>
              <goals>
                <goal>dockerBuild</goal>
              </goals>
              <configuration>
                <from>
                  <image>${docker-basis-image.version}</image>
                </from>
                <to>
                  <!--image>docker.io/rahn/${project.artifactId}</image-->
                  <tags>
                    <tag>latest</tag>
                    <tag>${project.version}</tag>
                  </tags>
                </to>
              </configuration>
            </execution>
          </executions>
        </plugin>
        
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <!-- Create *-source.jar -->
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>default-prepare-agent-integration</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report-integration</id>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <developers>
    <developer>
      <name>Frank Rahn</name>
      <email>frank+git@frank-rahn.de</email>
      <organization>Frank W. Rahn</organization>
      <organizationUrl>https://www.frank-rahn.de/</organizationUrl>
      <roles>
        <role>Contributor</role>
        <role>Developer</role>
      </roles>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/frank-rahn/guidelines-spring-boot/issues</url>
  </issueManagement>

  <ciManagement>
    <system>GitHub Actions</system>
    <url>https://github.com/frank-rahn/guidelines-spring-boot/actions</url>
  </ciManagement>

</project>
